@mixin neu($bg: #e0e0e0) {
  transition: box-shadow 0.2s ease-in-out;
  background-color: $bg;
  box-shadow: 
  0.5rem 0.5rem 1.2rem darken($bg, 10%), 
  -0.5rem -0.5rem 1.2rem lighten($bg, 10%),
  inset 0.5rem 0.5rem 1.2rem transparent,
  inset -0.5rem -0.5rem 1.2rem transparent;
}

@mixin neu-inset($bg: #e0e0e0) {
  background-color: $bg;
  box-shadow:
    0.5rem 0.5rem 1.2rem transparent,
    -0.5rem -0.5rem 1.2rem transparent, 
    inset 0.5rem 0.5rem 1.2rem darken($bg, 10%),
    inset -0.5rem -0.5rem 1.2rem lighten($bg, 10%);
}

@mixin section($primaryColor: #e0e0e0) {
  width: 100%;
  max-width: 1000px;
  min-height: 250vh;
  margin: 25vh auto;
  padding: 5rem 3rem;
  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.5);
  border-radius: 0 5rem 5rem 0;
  opacity: 0;
  background-color: $primaryColor;
  &:last-of-type {
    margin-bottom: 5vh;
  }
  &.visible {
    animation: expand 1s ease-in-out forwards;
    @keyframes expand {
      0% {
        opacity: 1;
        clip-path: polygon(0 0, 0 0, 0 10rem, 0 10rem);
        border-radius: 0;
      }
      30% {
        opacity: 1;
        clip-path: polygon(0 0, 100% 0, 100% 10rem, 0 10rem);
      }
      100% {
        opacity: 1;
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
      }
    }
  }

  @media screen and (max-width: 768px) {
    margin-top: 155vh; // スマホの時に階層移動アニメーションが終わった状態を見せるため、margin-topを設定
    border-radius: 3rem;
  }

  &:not(&.top) {
    h1 {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
      height: 100vh;
      margin-bottom: 3rem;
      font-size: 8rem;
    }
  }

  .pageLink {
    margin-top: 5rem;
    a {
      position: relative;
      display: block;
      width: fit-content;
      margin: 0 auto;
      padding-inline: 0.3rem;
      text-align: center;
      text-decoration: none;
      outline: none;
      &::after {
        content: '';
        position: absolute;
        bottom: -0.5rem;
        left: 0;
        width: 100%;
        height: 0.18rem;
        border-radius: 1rem;
        background-color: #222;
        transform: scale(0, 1);
        transform-origin: right;
        transition: transform 0.2s ease-in-out;
      }
      &:hover::after {
        transform: scale(1, 1);
        transform-origin: left;
      }
    }
  }

  .eventContent {
    $bgColor: #eee;
    position: fixed;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    top: 50%;
    left: 4%;
    transform: translateY(-50%);
    width: 32%;
    height: 80%;
    padding: 3rem;
    background-color: $bgColor;
    border-radius: 5rem;
    box-shadow: 0 0 3rem rgba(0, 0, 0, 0.2);
    animation: fadeIn 0.2s ease-in-out;
    z-index: 2;

    @keyframes fadeIn {
      from {
        opacity: 0;
        left: -96%;
      }
      to {
        opacity: 1;
        left: 4%;
      }
    }

    p {
      &.secretText {
        color: $bgColor;
      }
    }

    img {
      position: relative !important;
      width: 80%  !important;
      height: auto !important;
      object-fit: cover;
      border-radius: 1rem;
      box-shadow: 0 0 1rem rgba(0, 0, 0, 0.2);
    }

    .button {
      position: relative;
      display: flex;
      justify-content: center;
      align-items: center;
      width: 15rem;
      height: 4rem;
      border-radius: 1rem;
      color: #222;
      background: $bgColor;
      overflow: hidden;

      span {
        position: relative;
        z-index: 1;
      }

      &::before {
        content: '';
        position: absolute;
        top: -0.2rem;
        left: -0.2rem;
        width: calc(100% + 0.4rem);
        height: calc(100% + 0.4rem);
        transform: translateX(calc(-100% + 1rem));
        border-radius: 0.8rem;
        background-color: #222;
        pointer-events: none;
        transition: transform 0.2s ease-in-out;
      }

      a {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
        border-radius: 1rem;
        border: 0.2rem solid #222;
        color: #222;
        transition: color 0.2s ease-in-out;
      }

      &:hover {
        &::before {
          transform: translateX(0);
        }
        a {
          color: $bgColor;
        }
      }
    }
  }
}
